% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/magic_karma.r
\name{magic.karma}
\alias{magic.karma}
\title{Train multitude of models on a univariate time series}
\usage{
magic.karma(y, model_list = 1:11, stacking = F, test_pct_train = "auto",
  test_type_train = "auto", test_pct_valid = "auto",
  test_type_valid = "auto", xreg = NULL, plot = F, stdout = F)
}
\arguments{
\item{y}{A univariate time-series vector; type <numeric> or <ts>.}

\item{model_list}{List of indexes of training models/algorithms in that order: ms-arima, auto-arima, nms-arima, ld-arima, rw-arima, sbj-arima, smbj-arima, nnetar, ets, bats, tbats; <list>}

\item{stacking}{Whether to use ensemble learning algorithms or not; <T/F>}

\item{test_pct_train}{Percentage of train-test split in model training (e.g. 70-30), after the model is trained.}

\item{test_type_train}{Train-test split type for training, i.e. percentage or fixed window; "percentage": test_pct = 12 will be read as the 12 percent of the length of the series; "window": test_pct = 12 will be read as the 12 last time points (e.g. months) of the series.}

\item{test_pct_valid}{Percentage of train-test split in model validation (e.g. 70-30), after the model is trained.}

\item{test_type_valid}{Train-test split type for validation, i.e. percentage or fixed window; "percentage": test_pct = 12 will be read as the 12 percent of the length of the series; "window": test_pct = 12 will be read as the 12 last time points (e.g. months) of the series.}

\item{xreg}{Optional vector or matrix of exogenous regressors; see documentation for Arima(), package 'forecast'.}

\item{plot}{Option to depict plots during local search; if TRUE (default), AC and PAC plots are active. <logical>}

\item{stdout}{Option to output optimisation diagnostics during local search; <logical>}
}
\value{
Object of class "karma.fit"; (extends class "Arima" from package 'forecast').
}
\description{
Train multitude of models on a univariate time series
}
\examples{
 kmodels = magic.karma(JohnsonJohnson)
 kmodels[[1]]$fit_obj$aicc
 kmodels[[1]]$cv_obj$mape_in
 kmodels[[1]]$cv_obj$mape_out  
}
\seealso{
\code{\link{tseries}}, \code{\link{forecast}}
}

